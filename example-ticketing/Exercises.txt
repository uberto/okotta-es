timeline

09:00 - 09:30 Presentation - Exercise 0: Kotlin hello world - Kotlin playground
09:30 - 09:45 How Event Sourcing and Functional Programming works together
09:45 - 10:30 Exercise 1: Implement simple state machine + discussion (15m.)
10.30 - 11:00 Break
11:00 - 11:15 Modelling DDD with Command and Queries
11:15 - 11:45 HelpDesk presentation - Live coding on HelpDesk
11:45 - 12:30 Exercise 2: Small Bugfixes on HelpDesk + discussion (15m.)
12.30 - 13.30 Lunch
13:30 - 14:15 Exercise 3: coding + discussion (15m.)
14:15 - 15:00 Exercise 4: coding + discussion (15m.)
15.00 - 15.30 Break
15.30 - 15:45 Concepts about Designing ES and MS
15.45 - 16:30 Exercise 5: Microservices ES design + Presentations of results
16.30 - 17:00 Takeouts and QA

--------


Exercise 1: Complete the SafeEvent.kt code in a way that will make the all the tests pass
see diagram in:
codegen/examples/safe.dot

to build and run the tests:
cd core
../gradlew build

Exercise 2: Fix the HelpDesk in a way that will make the test on double assignment pass

to build and run the tests:
cd example-ticketing
../gradlew build

to run the application:
cd example-ticketing
../gradlew run

Exercise 3: Create a query for the HelpDesk Projection to count tickets for a given state and connect to http endpoint (optional connect to UI)

Exercise 4: Create a HelpDesk Command for UpdateMetadata and connect to http endpoint (optional connect to UI)

Exercise 5: Model the flow of articles for an academic journal publisher
- the system receive all the data for an accepted article from Production system
- the system has to contact the author by email
- the author has to answer some questions to generate a licence
- the author has to accept the licence
- if article is OpenAccess the system has to calculate the price
- if OA the author has to pay the price by credit card or invoice
- the system send the licence to the legal store
- the system send the relevant information to the Production system